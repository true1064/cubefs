// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.5
// source: cipher_material.proto

package andescryptokit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 端云加密材料，Golang执行命令：protoc --go_out=. cipher_material.proto
type CipherMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 由公钥加密的DEK。
	PublickKeyCipherDEK []byte `protobuf:"bytes,1,opt,name=PublickKeyCipherDEK,proto3" json:"PublickKeyCipherDEK,omitempty"`
	// 传输加密的初始化向量，每次加密都应当被更新。
	IV []byte `protobuf:"bytes,2,opt,name=IV,proto3" json:"IV,omitempty"`
	// 由TEE内部密钥加密后的DEK
	TEECipherDEK []byte `protobuf:"bytes,3,opt,name=TEECipherDEK,proto3" json:"TEECipherDEK,omitempty"`
	// [仅云端]由KMS加密的DEK。
	KMSCipherDEK []byte `protobuf:"bytes,4,opt,name=KMSCipherDEK,proto3" json:"KMSCipherDEK,omitempty"`
	// [仅终端]由安全芯片内部密钥加密后的DEK
	SECipherDEK []byte `protobuf:"bytes,5,opt,name=SECipherDEK,proto3" json:"SECipherDEK,omitempty"`
	// DEK的sha256值
	Sha256DEK []byte `protobuf:"bytes,6,opt,name=Sha256DEK,proto3" json:"Sha256DEK,omitempty"`
	// 传输加密是否开启HMAC完整性校验，false为1，true为2
	Hmac uint32 `protobuf:"varint,7,opt,name=Hmac,proto3" json:"Hmac,omitempty"`
}

func (x *CipherMaterial) Reset() {
	*x = CipherMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cipher_material_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CipherMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CipherMaterial) ProtoMessage() {}

func (x *CipherMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_cipher_material_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CipherMaterial.ProtoReflect.Descriptor instead.
func (*CipherMaterial) Descriptor() ([]byte, []int) {
	return file_cipher_material_proto_rawDescGZIP(), []int{0}
}

func (x *CipherMaterial) GetPublickKeyCipherDEK() []byte {
	if x != nil {
		return x.PublickKeyCipherDEK
	}
	return nil
}

func (x *CipherMaterial) GetIV() []byte {
	if x != nil {
		return x.IV
	}
	return nil
}

func (x *CipherMaterial) GetTEECipherDEK() []byte {
	if x != nil {
		return x.TEECipherDEK
	}
	return nil
}

func (x *CipherMaterial) GetKMSCipherDEK() []byte {
	if x != nil {
		return x.KMSCipherDEK
	}
	return nil
}

func (x *CipherMaterial) GetSECipherDEK() []byte {
	if x != nil {
		return x.SECipherDEK
	}
	return nil
}

func (x *CipherMaterial) GetSha256DEK() []byte {
	if x != nil {
		return x.Sha256DEK
	}
	return nil
}

func (x *CipherMaterial) GetHmac() uint32 {
	if x != nil {
		return x.Hmac
	}
	return 0
}

var File_cipher_material_proto protoreflect.FileDescriptor

var file_cipher_material_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x61, 0x6e, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6b, 0x69, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x0e, 0x43, 0x69, 0x70, 0x68,
	0x65, 0x72, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x45,
	0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x6b,
	0x4b, 0x65, 0x79, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x45, 0x4b, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x56, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x49, 0x56, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x45, 0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x45, 0x4b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x54, 0x45, 0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x45, 0x4b,
	0x12, 0x22, 0x0a, 0x0c, 0x4b, 0x4d, 0x53, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x44, 0x45, 0x4b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x4b, 0x4d, 0x53, 0x43, 0x69, 0x70, 0x68, 0x65,
	0x72, 0x44, 0x45, 0x4b, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x45, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72,
	0x44, 0x45, 0x4b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x53, 0x45, 0x43, 0x69, 0x70,
	0x68, 0x65, 0x72, 0x44, 0x45, 0x4b, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x32, 0x35, 0x36,
	0x44, 0x45, 0x4b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x44, 0x45, 0x4b, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6d, 0x61, 0x63, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x48, 0x6d, 0x61, 0x63, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cipher_material_proto_rawDescOnce sync.Once
	file_cipher_material_proto_rawDescData = file_cipher_material_proto_rawDesc
)

func file_cipher_material_proto_rawDescGZIP() []byte {
	file_cipher_material_proto_rawDescOnce.Do(func() {
		file_cipher_material_proto_rawDescData = protoimpl.X.CompressGZIP(file_cipher_material_proto_rawDescData)
	})
	return file_cipher_material_proto_rawDescData
}

var file_cipher_material_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_cipher_material_proto_goTypes = []interface{}{
	(*CipherMaterial)(nil), // 0: andescryptokit.CipherMaterial
}
var file_cipher_material_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cipher_material_proto_init() }
func file_cipher_material_proto_init() {
	if File_cipher_material_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cipher_material_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CipherMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cipher_material_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cipher_material_proto_goTypes,
		DependencyIndexes: file_cipher_material_proto_depIdxs,
		MessageInfos:      file_cipher_material_proto_msgTypes,
	}.Build()
	File_cipher_material_proto = out.File
	file_cipher_material_proto_rawDesc = nil
	file_cipher_material_proto_goTypes = nil
	file_cipher_material_proto_depIdxs = nil
}
